name: Build and upload release assets

on:
  release:
    types: [published]

jobs:
  build:
    if: "!github.event.release.prerelease"
    name: Build release assets
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup go
        uses: actions/setup-go@master
        with:
          go-version: "1.16"
      -
        name: Build binaries
        env:
          VERSION: ${{ github.event.release.tag_name }}
        run: make build-all
        shell: bash
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: build/
  sign:
    name: Sign apple binaries
    needs: build
    runs-on: macos-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: build/
      -
        name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          # The certificates in a PKCS12 file encoded as a base64 string
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          # The password used to import the PKCS12 file.
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      -
        name: Install gon via Homebrew for code signing and app notarization
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      -
        name: Sign and notarize mac binaries with gon
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: gon -log-level=debug -log-json ./gon.hcl
      -
        name: Move zip file
        run: mv ./wakatime-cli-darwin.zip ./build/
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: build/
  upload:
    name: Upload release assets
    needs: sign
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: build/
      -
        name: Prepare release assets
        run: ./bin/prepare_assets.sh
      -
        name: Upload release assets
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./release/*"]'
      - 
        name: "Get version"
        id: version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)
  notify:
    name: Send slack notification
    needs: upload
    runs-on: ubuntu-latest
    steps:
      -
        name: "Slack notification"
        uses: 8398a7/action-slack@v3
        if: ${{ success() }}
        with:
          status: custom
          fields: message
          custom_payload: |
            {
              username: 'WakaTime Bot',
              icon_emoji: ':mega:',
              attachments: [{
                color: 'good',
                pretext: 'New <https://github.com/wakatime/wakatime-cli|wakatime-cli> version released',
                title: `${{ steps.version.outputs.version }}`,
                title_link: `https://github.com/wakatime/wakatime-cli/releases/tag/${{ steps.version.outputs.version }}`,
                text: `${process.env.AS_MESSAGE}`
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
